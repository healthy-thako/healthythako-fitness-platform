#!/usr/bin/env node

/**
 * Production Deployment Script for HealthyThako
 * Helps prepare the application for production deployment
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Production environment configuration
const PRODUCTION_ENV = {
  // Client-side environment variables
  VITE_SUPABASE_URL: 'https://lhncpcsniuxnrmabbkmr.supabase.co',
  VITE_SUPABASE_ANON_KEY: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxobmNwY3NuaXV4bnJtYWJia21yIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA5NzI4NzQsImV4cCI6MjA2NjU0ODg3NH0.Hs6IQZS8Hs6IQZS8Hs6IQZS8Hs6IQZS8Hs6IQZS8Hs6IQZS8',
  VITE_UDDOKTAPAY_API_KEY: 'yrnDmmCuY0uiPU7rgoBGsWYbx97tJxNFpapmKwXYU',
  VITE_UDDOKTAPAY_BASE_URL: 'https://digitaldot.paymently.io/api',
  VITE_UDDOKTAPAY_ENVIRONMENT: 'production',
  VITE_APP_NAME: 'HealthyThako',
  VITE_APP_URL: 'https://healthythako.com', // Update this to your actual domain
  VITE_APP_ENVIRONMENT: 'production',
  VITE_PAYMENT_CURRENCY: 'BDT',
  VITE_PAYMENT_SUCCESS_URL: '/payment-success',
  VITE_PAYMENT_CANCEL_URL: '/payment-cancelled',
  VITE_PLATFORM_COMMISSION: '0.1',
  VITE_DEFAULT_TRAINER_RATE: '1200',
  VITE_DEFAULT_GYM_MONTHLY_RATE: '2000',
  VITE_ENABLE_REAL_TIME: 'true',
  VITE_ENABLE_NOTIFICATIONS: 'true',
  VITE_ENABLE_ANALYTICS: 'true',
  VITE_ENABLE_DEBUG_LOGS: 'false', // Disabled in production
  VITE_MOBILE_APP_SCHEME: 'healthythako',
  VITE_MOBILE_DEEP_LINK_SUCCESS: 'healthythako://payment/success',
  VITE_MOBILE_DEEP_LINK_CANCEL: 'healthythako://payment/cancelled',
};

// Server-side environment variables for Supabase
const SUPABASE_SECRETS = {
  UDDOKTAPAY_API_KEY: 'yrnDmmCuY0uiPU7rgoBGsWYbx97tJxNFpapmKwXYU',
  SUPABASE_URL: 'https://lhncpcsniuxnrmabbkmr.supabase.co',
  // SUPABASE_SERVICE_ROLE_KEY: 'SET_MANUALLY_IN_DASHBOARD',
};

function createProductionEnv() {
  const envPath = path.join(path.dirname(__dirname), '.env.production');
  
  console.log('🚀 Creating production environment file...');
  
  let envContent = '# HealthyThako Production Environment Configuration\\n';
  envContent += '# Generated by deploy-production.js\\n\\n';
  
  envContent += '# Client-side Environment Variables\\n';
  for (const [key, value] of Object.entries(PRODUCTION_ENV)) {
    envContent += `${key}=${value}\\n`;
  }
  
  envContent += '\\n# Server-side Environment Variables (for Edge Functions)\\n';
  for (const [key, value] of Object.entries(SUPABASE_SECRETS)) {
    envContent += `${key}=${value}\\n`;
  }
  
  fs.writeFileSync(envPath, envContent);
  console.log('✅ Production .env file created at:', envPath);
}

function generateSupabaseCommands() {
  console.log('\\n📋 Supabase Production Secrets Setup:');
  console.log('Run these commands to set production environment variables:\\n');
  
  for (const [key, value] of Object.entries(SUPABASE_SECRETS)) {
    if (key !== 'SUPABASE_SERVICE_ROLE_KEY') {
      console.log(`supabase secrets set ${key}="${value}"`);
    }
  }
  
  console.log('\\n⚠️  Important: Set SUPABASE_SERVICE_ROLE_KEY manually in Supabase dashboard');
  console.log('   Go to: Project Settings → API → service_role key');
}

function generateDeploymentChecklist() {
  console.log('\\n📋 Production Deployment Checklist:');
  console.log('\\n✅ Pre-deployment:');
  console.log('  □ Update VITE_APP_URL to your production domain');
  console.log('  □ Set all Supabase secrets using commands above');
  console.log('  □ Test payment integration at /payment-test');
  console.log('  □ Verify environment setup at /environment-setup');
  console.log('  □ Run production build: npm run build');
  
  console.log('\\n✅ Deployment:');
  console.log('  □ Deploy Edge Functions: supabase functions deploy');
  console.log('  □ Deploy frontend to hosting platform');
  console.log('  □ Configure custom domain and SSL');
  console.log('  □ Set production environment variables on hosting platform');
  
  console.log('\\n✅ Post-deployment:');
  console.log('  □ Test all payment flows (trainer, gym, service)');
  console.log('  □ Verify webhook functionality');
  console.log('  □ Test mobile app deep linking');
  console.log('  □ Monitor error logs and performance');
  console.log('  □ Set up monitoring and alerts');
}

function generateHostingPlatformInstructions() {
  console.log('\\n🌐 Hosting Platform Environment Variables:');
  console.log('\\nFor Vercel, Netlify, or similar platforms, set these environment variables:\\n');
  
  for (const [key, value] of Object.entries(PRODUCTION_ENV)) {
    console.log(`${key}=${value}`);
  }
  
  console.log('\\n📝 Platform-specific instructions:');
  console.log('\\nVercel:');
  console.log('  1. Go to Project Settings → Environment Variables');
  console.log('  2. Add each variable above');
  console.log('  3. Set Environment to "Production"');
  
  console.log('\\nNetlify:');
  console.log('  1. Go to Site Settings → Environment Variables');
  console.log('  2. Add each variable above');
  
  console.log('\\nOther platforms:');
  console.log('  1. Copy .env.production to your hosting platform');
  console.log('  2. Ensure all VITE_ prefixed variables are available at build time');
}

function validateProductionConfig() {
  console.log('\\n🔍 Validating production configuration...');
  
  const issues = [];
  
  // Check if production URL is updated
  if (PRODUCTION_ENV.VITE_APP_URL === 'https://healthythako.com') {
    issues.push('⚠️  Update VITE_APP_URL to your actual production domain');
  }
  
  // Check if debug logs are disabled
  if (PRODUCTION_ENV.VITE_ENABLE_DEBUG_LOGS === 'true') {
    issues.push('⚠️  Debug logs should be disabled in production');
  }
  
  // Check API key length
  if (PRODUCTION_ENV.VITE_UDDOKTAPAY_API_KEY.length !== 41) {
    issues.push('⚠️  UddoktaPay API key length seems incorrect');
  }
  
  if (issues.length === 0) {
    console.log('✅ Production configuration looks good!');
  } else {
    console.log('❌ Issues found:');
    issues.forEach(issue => console.log(`  ${issue}`));
  }
  
  return issues.length === 0;
}

function main() {
  console.log('🚀 HealthyThako Production Deployment Setup\\n');
  
  const args = process.argv.slice(2);
  
  if (args.includes('--help') || args.includes('-h')) {
    console.log('Usage: node scripts/deploy-production.js [options]');
    console.log('\\nOptions:');
    console.log('  --env-only        Create production .env file only');
    console.log('  --secrets-only    Show Supabase secrets commands only');
    console.log('  --validate        Validate production configuration');
    console.log('  --hosting         Show hosting platform instructions');
    console.log('  --help, -h        Show this help message');
    return;
  }
  
  if (args.includes('--validate')) {
    validateProductionConfig();
    return;
  }
  
  if (args.includes('--secrets-only')) {
    generateSupabaseCommands();
    return;
  }
  
  if (args.includes('--hosting')) {
    generateHostingPlatformInstructions();
    return;
  }
  
  if (args.includes('--env-only')) {
    createProductionEnv();
    return;
  }
  
  // Default: run full setup
  createProductionEnv();
  generateSupabaseCommands();
  generateDeploymentChecklist();
  generateHostingPlatformInstructions();
  validateProductionConfig();
}

// Run main function
main();

export {
  PRODUCTION_ENV,
  SUPABASE_SECRETS,
  createProductionEnv,
  generateSupabaseCommands,
  validateProductionConfig
};
